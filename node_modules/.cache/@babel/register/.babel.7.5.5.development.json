{
  "{\"sourceRoot\":\"/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP\",\"filename\":\"/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP",
      "filename": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _graphql = require(\"graphql\");\n\nvar _apolloServer = require(\"apollo-server\");\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    users: [User!]!\\n    user(id: ID!): User\\n    messages: [Message!]!\\n  }\\n  type Mutation {\\n    addUser(email: String!, name: String): User!\\n  }\\n  type User {\\n    id: ID!\\n    email: String!\\n    name: String\\n    avatarUrl: String\\n    messages: [Message!]!\\n  }\\n  type Message {\\n    id: ID!\\n    body: String!\\n    createdAt: String!\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar db = {\n  users: [{\n    id: '1',\n    email: 'faith@gamil.com',\n    name: 'Faith'\n  }, {\n    id: '2',\n    email: 'efe@gamil.com',\n    name: 'efe'\n  }],\n  messages: [{\n    id: '1',\n    userId: '1',\n    body: 'Hello',\n    createdAt: Date.now()\n  }, {\n    id: '2',\n    userId: '2',\n    body: 'Hi',\n    createdAt: Date.now()\n  }, {\n    id: '3',\n    userId: '1',\n    body: \"What's up?\",\n    createdAt: Date.now()\n  }]\n}; // rootQuery\n\nvar typeDefs = (0, _apolloServer.gql)(_templateObject()); // To return something, We need A resolver function\n\nvar resolvers = {\n  Query: {\n    users: function users() {\n      return db.users;\n    },\n    user: function user(root, args) {\n      return db.users.find(function (user) {\n        return user.id === args.id;\n      });\n    },\n    // user: (root, { id }) => db.users.find(user => user.id === id),\n    messages: function messages() {\n      return db.messages;\n    }\n  },\n  Mutation: {\n    addUser: function addUser(root, _ref) {\n      var email = _ref.email,\n          name = _ref.name;\n      var user = {\n        id: _crypto[\"default\"].randomBytes(10).toString('hex'),\n        email: email,\n        name: name\n      };\n      db.users.push(user);\n      return user;\n    }\n  },\n  User: {\n    messages: function messages(root) {\n      return db.messages.filter(function (message) {\n        return message.userId === root.id;\n      });\n    }\n  }\n}; // const server = new ApolloServer({\n//   typeDefs,\n//   resolvers\n// });\n// mocks data from apollo\n\nvar server = new _apolloServer.ApolloServer({\n  typeDefs: typeDefs,\n  mocks: true\n});\nserver.listen().then(function (_ref2) {\n  var url = _ref2.url;\n  return console.log(url);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRiIiwidXNlcnMiLCJpZCIsImVtYWlsIiwibmFtZSIsIm1lc3NhZ2VzIiwidXNlcklkIiwiYm9keSIsImNyZWF0ZWRBdCIsIkRhdGUiLCJub3ciLCJ0eXBlRGVmcyIsImdxbCIsInJlc29sdmVycyIsIlF1ZXJ5IiwidXNlciIsInJvb3QiLCJhcmdzIiwiZmluZCIsIk11dGF0aW9uIiwiYWRkVXNlciIsImNyeXB0byIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJwdXNoIiwiVXNlciIsImZpbHRlciIsIm1lc3NhZ2UiLCJzZXJ2ZXIiLCJBcG9sbG9TZXJ2ZXIiLCJtb2NrcyIsImxpc3RlbiIsInRoZW4iLCJ1cmwiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsRUFBRSxHQUFHO0FBQ1RDLEVBQUFBLEtBQUssRUFBRSxDQUNMO0FBQUVDLElBQUFBLEVBQUUsRUFBRSxHQUFOO0FBQVdDLElBQUFBLEtBQUssRUFBRSxpQkFBbEI7QUFBcUNDLElBQUFBLElBQUksRUFBRTtBQUEzQyxHQURLLEVBRUw7QUFBRUYsSUFBQUEsRUFBRSxFQUFFLEdBQU47QUFBV0MsSUFBQUEsS0FBSyxFQUFFLGVBQWxCO0FBQW1DQyxJQUFBQSxJQUFJLEVBQUU7QUFBekMsR0FGSyxDQURFO0FBS1RDLEVBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQUVILElBQUFBLEVBQUUsRUFBRSxHQUFOO0FBQVdJLElBQUFBLE1BQU0sRUFBRSxHQUFuQjtBQUF3QkMsSUFBQUEsSUFBSSxFQUFFLE9BQTlCO0FBQXVDQyxJQUFBQSxTQUFTLEVBQUVDLElBQUksQ0FBQ0MsR0FBTDtBQUFsRCxHQURRLEVBRVI7QUFBRVIsSUFBQUEsRUFBRSxFQUFFLEdBQU47QUFBV0ksSUFBQUEsTUFBTSxFQUFFLEdBQW5CO0FBQXdCQyxJQUFBQSxJQUFJLEVBQUUsSUFBOUI7QUFBb0NDLElBQUFBLFNBQVMsRUFBRUMsSUFBSSxDQUFDQyxHQUFMO0FBQS9DLEdBRlEsRUFHUjtBQUFFUixJQUFBQSxFQUFFLEVBQUUsR0FBTjtBQUFXSSxJQUFBQSxNQUFNLEVBQUUsR0FBbkI7QUFBd0JDLElBQUFBLElBQUksRUFBRSxZQUE5QjtBQUE0Q0MsSUFBQUEsU0FBUyxFQUFFQyxJQUFJLENBQUNDLEdBQUw7QUFBdkQsR0FIUTtBQUxELENBQVgsQyxDQVlBOztBQUNBLElBQU1DLFFBQVEsT0FBR0MsaUJBQUgsb0JBQWQsQyxDQXVCQTs7QUFFQSxJQUFNQyxTQUFTLEdBQUc7QUFDaEJDLEVBQUFBLEtBQUssRUFBRTtBQUNMYixJQUFBQSxLQUFLLEVBQUU7QUFBQSxhQUFNRCxFQUFFLENBQUNDLEtBQVQ7QUFBQSxLQURGO0FBRUxjLElBQUFBLElBQUksRUFBRSxjQUFDQyxJQUFELEVBQU9DLElBQVA7QUFBQSxhQUFnQmpCLEVBQUUsQ0FBQ0MsS0FBSCxDQUFTaUIsSUFBVCxDQUFjLFVBQUFILElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNiLEVBQUwsS0FBWWUsSUFBSSxDQUFDZixFQUFyQjtBQUFBLE9BQWxCLENBQWhCO0FBQUEsS0FGRDtBQUdMO0FBQ0FHLElBQUFBLFFBQVEsRUFBRTtBQUFBLGFBQU1MLEVBQUUsQ0FBQ0ssUUFBVDtBQUFBO0FBSkwsR0FEUztBQU9oQmMsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLE9BQU8sRUFBRSxpQkFBQ0osSUFBRCxRQUEyQjtBQUFBLFVBQWxCYixLQUFrQixRQUFsQkEsS0FBa0I7QUFBQSxVQUFYQyxJQUFXLFFBQVhBLElBQVc7QUFDbEMsVUFBTVcsSUFBSSxHQUFHO0FBQ1hiLFFBQUFBLEVBQUUsRUFBRW1CLG1CQUFPQyxXQUFQLENBQW1CLEVBQW5CLEVBQXVCQyxRQUF2QixDQUFnQyxLQUFoQyxDQURPO0FBRVhwQixRQUFBQSxLQUFLLEVBQUxBLEtBRlc7QUFHWEMsUUFBQUEsSUFBSSxFQUFKQTtBQUhXLE9BQWI7QUFNQUosTUFBQUEsRUFBRSxDQUFDQyxLQUFILENBQVN1QixJQUFULENBQWNULElBQWQ7QUFFQSxhQUFPQSxJQUFQO0FBQ0Q7QUFYTyxHQVBNO0FBb0JoQlUsRUFBQUEsSUFBSSxFQUFFO0FBQ0pwQixJQUFBQSxRQUFRLEVBQUUsa0JBQUFXLElBQUk7QUFBQSxhQUFJaEIsRUFBRSxDQUFDSyxRQUFILENBQVlxQixNQUFaLENBQW1CLFVBQUFDLE9BQU87QUFBQSxlQUFJQSxPQUFPLENBQUNyQixNQUFSLEtBQW1CVSxJQUFJLENBQUNkLEVBQTVCO0FBQUEsT0FBMUIsQ0FBSjtBQUFBO0FBRFY7QUFwQlUsQ0FBbEIsQyxDQXlCQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBLElBQU0wQixNQUFNLEdBQUcsSUFBSUMsMEJBQUosQ0FBaUI7QUFDOUJsQixFQUFBQSxRQUFRLEVBQVJBLFFBRDhCO0FBRTlCbUIsRUFBQUEsS0FBSyxFQUFFO0FBRnVCLENBQWpCLENBQWY7QUFLQUYsTUFBTSxDQUFDRyxNQUFQLEdBQWdCQyxJQUFoQixDQUFxQjtBQUFBLE1BQUdDLEdBQUgsU0FBR0EsR0FBSDtBQUFBLFNBQWFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRixHQUFaLENBQWI7QUFBQSxDQUFyQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZWZlYWdhcmUvRGVza3RvcC9BTEwgTVkgUkFJTFMgQVBQL3NlY29uZF9HUkFQSFFMX01FUk5fQVBQIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ3JhcGhxbCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgQXBvbGxvU2VydmVyLCBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcbmltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcblxuY29uc3QgZGIgPSB7XG4gIHVzZXJzOiBbXG4gICAgeyBpZDogJzEnLCBlbWFpbDogJ2ZhaXRoQGdhbWlsLmNvbScsIG5hbWU6ICdGYWl0aCcgfSxcbiAgICB7IGlkOiAnMicsIGVtYWlsOiAnZWZlQGdhbWlsLmNvbScsIG5hbWU6ICdlZmUnIH1cbiAgXSxcbiAgbWVzc2FnZXM6IFtcbiAgICB7IGlkOiAnMScsIHVzZXJJZDogJzEnLCBib2R5OiAnSGVsbG8nLCBjcmVhdGVkQXQ6IERhdGUubm93KCkgfSxcbiAgICB7IGlkOiAnMicsIHVzZXJJZDogJzInLCBib2R5OiAnSGknLCBjcmVhdGVkQXQ6IERhdGUubm93KCkgfSxcbiAgICB7IGlkOiAnMycsIHVzZXJJZDogJzEnLCBib2R5OiBcIldoYXQncyB1cD9cIiwgY3JlYXRlZEF0OiBEYXRlLm5vdygpIH1cbiAgXVxufTtcblxuLy8gcm9vdFF1ZXJ5XG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcbiAgdHlwZSBRdWVyeSB7XG4gICAgdXNlcnM6IFtVc2VyIV0hXG4gICAgdXNlcihpZDogSUQhKTogVXNlclxuICAgIG1lc3NhZ2VzOiBbTWVzc2FnZSFdIVxuICB9XG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIGFkZFVzZXIoZW1haWw6IFN0cmluZyEsIG5hbWU6IFN0cmluZyk6IFVzZXIhXG4gIH1cbiAgdHlwZSBVc2VyIHtcbiAgICBpZDogSUQhXG4gICAgZW1haWw6IFN0cmluZyFcbiAgICBuYW1lOiBTdHJpbmdcbiAgICBhdmF0YXJVcmw6IFN0cmluZ1xuICAgIG1lc3NhZ2VzOiBbTWVzc2FnZSFdIVxuICB9XG4gIHR5cGUgTWVzc2FnZSB7XG4gICAgaWQ6IElEIVxuICAgIGJvZHk6IFN0cmluZyFcbiAgICBjcmVhdGVkQXQ6IFN0cmluZyFcbiAgfVxuYDtcblxuLy8gVG8gcmV0dXJuIHNvbWV0aGluZywgV2UgbmVlZCBBIHJlc29sdmVyIGZ1bmN0aW9uXG5cbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgUXVlcnk6IHtcbiAgICB1c2VyczogKCkgPT4gZGIudXNlcnMsXG4gICAgdXNlcjogKHJvb3QsIGFyZ3MpID0+IGRiLnVzZXJzLmZpbmQodXNlciA9PiB1c2VyLmlkID09PSBhcmdzLmlkKSxcbiAgICAvLyB1c2VyOiAocm9vdCwgeyBpZCB9KSA9PiBkYi51c2Vycy5maW5kKHVzZXIgPT4gdXNlci5pZCA9PT0gaWQpLFxuICAgIG1lc3NhZ2VzOiAoKSA9PiBkYi5tZXNzYWdlc1xuICB9LFxuICBNdXRhdGlvbjoge1xuICAgIGFkZFVzZXI6IChyb290LCB7IGVtYWlsLCBuYW1lIH0pID0+IHtcbiAgICAgIGNvbnN0IHVzZXIgPSB7XG4gICAgICAgIGlkOiBjcnlwdG8ucmFuZG9tQnl0ZXMoMTApLnRvU3RyaW5nKCdoZXgnKSxcbiAgICAgICAgZW1haWwsXG4gICAgICAgIG5hbWVcbiAgICAgIH07XG5cbiAgICAgIGRiLnVzZXJzLnB1c2godXNlcik7XG5cbiAgICAgIHJldHVybiB1c2VyO1xuICAgIH1cbiAgfSxcbiAgVXNlcjoge1xuICAgIG1lc3NhZ2VzOiByb290ID0+IGRiLm1lc3NhZ2VzLmZpbHRlcihtZXNzYWdlID0+IG1lc3NhZ2UudXNlcklkID09PSByb290LmlkKVxuICB9XG59O1xuXG4vLyBjb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcbi8vICAgdHlwZURlZnMsXG4vLyAgIHJlc29sdmVyc1xuLy8gfSk7XG5cbi8vIG1vY2tzIGRhdGEgZnJvbSBhcG9sbG9cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICB0eXBlRGVmcyxcbiAgbW9ja3M6IHRydWVcbn0pO1xuXG5zZXJ2ZXIubGlzdGVuKCkudGhlbigoeyB1cmwgfSkgPT4gY29uc29sZS5sb2codXJsKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "db",
        "users",
        "id",
        "email",
        "name",
        "messages",
        "userId",
        "body",
        "createdAt",
        "Date",
        "now",
        "typeDefs",
        "gql",
        "resolvers",
        "Query",
        "user",
        "root",
        "args",
        "find",
        "Mutation",
        "addUser",
        "crypto",
        "randomBytes",
        "toString",
        "push",
        "User",
        "filter",
        "message",
        "server",
        "ApolloServer",
        "mocks",
        "listen",
        "then",
        "url",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAG;AACTC,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE,iBAAlB;AAAqCC,IAAAA,IAAI,EAAE;AAA3C,GADK,EAEL;AAAEF,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,KAAK,EAAE,eAAlB;AAAmCC,IAAAA,IAAI,EAAE;AAAzC,GAFK,CADE;AAKTC,EAAAA,QAAQ,EAAE,CACR;AAAEH,IAAAA,EAAE,EAAE,GAAN;AAAWI,IAAAA,MAAM,EAAE,GAAnB;AAAwBC,IAAAA,IAAI,EAAE,OAA9B;AAAuCC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAlD,GADQ,EAER;AAAER,IAAAA,EAAE,EAAE,GAAN;AAAWI,IAAAA,MAAM,EAAE,GAAnB;AAAwBC,IAAAA,IAAI,EAAE,IAA9B;AAAoCC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAA/C,GAFQ,EAGR;AAAER,IAAAA,EAAE,EAAE,GAAN;AAAWI,IAAAA,MAAM,EAAE,GAAnB;AAAwBC,IAAAA,IAAI,EAAE,YAA9B;AAA4CC,IAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAvD,GAHQ;AALD,CAAX,C,CAYA;;AACA,IAAMC,QAAQ,OAAGC,iBAAH,oBAAd,C,CAuBA;;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLb,IAAAA,KAAK,EAAE;AAAA,aAAMD,EAAE,CAACC,KAAT;AAAA,KADF;AAELc,IAAAA,IAAI,EAAE,cAACC,IAAD,EAAOC,IAAP;AAAA,aAAgBjB,EAAE,CAACC,KAAH,CAASiB,IAAT,CAAc,UAAAH,IAAI;AAAA,eAAIA,IAAI,CAACb,EAAL,KAAYe,IAAI,CAACf,EAArB;AAAA,OAAlB,CAAhB;AAAA,KAFD;AAGL;AACAG,IAAAA,QAAQ,EAAE;AAAA,aAAML,EAAE,CAACK,QAAT;AAAA;AAJL,GADS;AAOhBc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,iBAACJ,IAAD,QAA2B;AAAA,UAAlBb,KAAkB,QAAlBA,KAAkB;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAClC,UAAMW,IAAI,GAAG;AACXb,QAAAA,EAAE,EAAEmB,mBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CADO;AAEXpB,QAAAA,KAAK,EAALA,KAFW;AAGXC,QAAAA,IAAI,EAAJA;AAHW,OAAb;AAMAJ,MAAAA,EAAE,CAACC,KAAH,CAASuB,IAAT,CAAcT,IAAd;AAEA,aAAOA,IAAP;AACD;AAXO,GAPM;AAoBhBU,EAAAA,IAAI,EAAE;AACJpB,IAAAA,QAAQ,EAAE,kBAAAW,IAAI;AAAA,aAAIhB,EAAE,CAACK,QAAH,CAAYqB,MAAZ,CAAmB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACrB,MAAR,KAAmBU,IAAI,CAACd,EAA5B;AAAA,OAA1B,CAAJ;AAAA;AADV;AApBU,CAAlB,C,CAyBA;AACA;AACA;AACA;AAEA;;AACA,IAAM0B,MAAM,GAAG,IAAIC,0BAAJ,CAAiB;AAC9BlB,EAAAA,QAAQ,EAARA,QAD8B;AAE9BmB,EAAAA,KAAK,EAAE;AAFuB,CAAjB,CAAf;AAKAF,MAAM,CAACG,MAAP,GAAgBC,IAAhB,CAAqB;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,SAAaC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAb;AAAA,CAArB",
      "sourceRoot": "/Users/efeagare/Desktop/ALL MY RAILS APP/second_GRAPHQL_MERN_APP",
      "sourcesContent": [
        "import { graphql } from 'graphql';\nimport { ApolloServer, gql } from 'apollo-server';\nimport crypto from 'crypto';\n\nconst db = {\n  users: [\n    { id: '1', email: 'faith@gamil.com', name: 'Faith' },\n    { id: '2', email: 'efe@gamil.com', name: 'efe' }\n  ],\n  messages: [\n    { id: '1', userId: '1', body: 'Hello', createdAt: Date.now() },\n    { id: '2', userId: '2', body: 'Hi', createdAt: Date.now() },\n    { id: '3', userId: '1', body: \"What's up?\", createdAt: Date.now() }\n  ]\n};\n\n// rootQuery\nconst typeDefs = gql`\n  type Query {\n    users: [User!]!\n    user(id: ID!): User\n    messages: [Message!]!\n  }\n  type Mutation {\n    addUser(email: String!, name: String): User!\n  }\n  type User {\n    id: ID!\n    email: String!\n    name: String\n    avatarUrl: String\n    messages: [Message!]!\n  }\n  type Message {\n    id: ID!\n    body: String!\n    createdAt: String!\n  }\n`;\n\n// To return something, We need A resolver function\n\nconst resolvers = {\n  Query: {\n    users: () => db.users,\n    user: (root, args) => db.users.find(user => user.id === args.id),\n    // user: (root, { id }) => db.users.find(user => user.id === id),\n    messages: () => db.messages\n  },\n  Mutation: {\n    addUser: (root, { email, name }) => {\n      const user = {\n        id: crypto.randomBytes(10).toString('hex'),\n        email,\n        name\n      };\n\n      db.users.push(user);\n\n      return user;\n    }\n  },\n  User: {\n    messages: root => db.messages.filter(message => message.userId === root.id)\n  }\n};\n\n// const server = new ApolloServer({\n//   typeDefs,\n//   resolvers\n// });\n\n// mocks data from apollo\nconst server = new ApolloServer({\n  typeDefs,\n  mocks: true\n});\n\nserver.listen().then(({ url }) => console.log(url));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564003776406
  }
}